#ifndef _LAYER_layer_7_H_
#define _LAYER_layer_7_H_


#include <NetworkConfig.h>


#define layer_7_type "output"

const sLayerGeometry layer_7_input_geometry = {4, 4, 12};
const sLayerGeometry layer_7_output_geometry = {1, 1, 7};
const sLayerGeometry layer_7_kernel_geometry = {4, 4, 12};

#define layer_7_weights_size ((unsigned int)1344) //array size
#define layer_7_weights_range ((nn_t)546) //multiply neuron result with range/1024

const nn_weight_t layer_7_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, -8, 7, -3, 8, 0, 0, 0, -6, 1, 0, 0, 1, 0, 0, 0, 
-6, 6, 5, 4, -1, 0, 9, 11, -1, 1, 0, 9, -8, 0, 0, -1, 
8, -8, 0, -7, -4, 0, 0, 0, 1, 1, 0, 0, 1, -2, 0, 0, 
-2, -8, 1, -3, -3, 7, 0, 0, 0, 9, 0, 0, -3, 14, 0, 0, 
18, 14, 5, 7, 7, 6, 5, 3, 28, 1, -16, -20, 26, 18, -4, -34, 
6, 0, 0, 4, 2, -6, -4, -2, 22, 4, -2, -9, 6, -2, 2, -5, 
2, 0, 0, 0, 7, 0, -1, 0, 2, 3, -1, -1, -18, 1, 0, 0, 
-2, 0, 1, 1, 0, -1, 0, 0, 3, 0, 0, -2, -3, 2, 0, -1, 
-2, -3, 2, 4, -6, 32, -56, 22, -2, 51, -64, 18, 7, 30, -54, 3, 
1, 0, 2, -1, -1, 0, -68, 39, 8, 36, -127, 11, 0, 52, -96, 30, 
-2, -3, -5, -5, 7, 56, -35, -26, -8, 62, -28, -31, -2, 26, -16, -18, 
-5, -7, 6, 3, 1, 3, 0, 0, 7, 2, 0, 0, -8, 4, 1, -1, 
-4, 6, 2, 5, 0, -1, -1, 0, 8, 0, -2, 0, 9, 0, 0, 0, 
1, -2, -6, -8, -4, 1, -2, 0, -8, 0, 0, 0, -1, 1, 0, 0, 
5, -2, -4, 6, 5, 0, -1, 0, -3, -2, -1, 0, -3, 5, 1, 0, 
2, -5, 3, -2, -1, -3, 1, 0, 8, -5, -1, 0, -8, -8, -6, 0, 
0, 23, -30, -12, 23, 27, -22, -20, -2, 36, -16, -22, 2, 23, -11, -19, 
0, 0, -5, -5, 0, 4, -7, -6, -4, 3, -5, -7, -9, -1, -1, -3, 
0, 0, 0, -2, -1, 0, 1, -2, -2, 0, 3, -1, 2, -2, 3, 0, 
1, 0, -1, -2, 0, 3, -1, -1, -3, 2, 0, -1, -2, 3, -1, 0, 
1, 0, 6, -5, 0, -5, 39, -41, -7, 0, 35, -46, 5, -21, 30, -57, 
-6, -1, -2, 0, -5, 36, -3, -58, 2, 32, 1, -75, -4, 24, 25, -103, 
-4, 0, 1, 5, 0, -10, 45, -44, 4, -21, 53, -43, -8, -11, 37, -27, 
2, -6, -2, -3, 8, 0, -1, 0, 5, 0, 0, 0, 0, -1, -2, 1, 
3, -1, 4, 3, 2, 0, 2, 0, -3, -1, 2, 0, 6, 0, 2, 0, 
-1, 4, -4, 3, 5, 0, 0, 0, -1, -2, 0, -1, -2, 0, -1, 0, 
-1, 0, 0, 4, -7, 0, 1, 0, 2, 0, 0, 0, 2, 0, 2, 0, 
0, 5, -2, 6, -5, 1, 7, 0, 0, 0, 5, 0, 0, 0, 6, 0, 
-19, 15, 25, -31, -24, 8, 36, -35, -12, 8, 34, -27, 6, 7, 21, -25, 
-2, 2, 3, -5, -2, 0, 2, -4, 0, -1, 0, -2, -3, -1, 0, 1, 
-3, -1, 1, 1, -2, -1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 2, 
0, 0, 0, -1, 0, -1, 1, -1, 0, 0, 0, -1, 0, -1, 2, -1, 
1, 5, -1, 6, 6, -20, 12, 12, -6, -27, 44, -14, 7, 10, 10, -14, 
4, 0, -2, -5, -6, -7, 60, -26, -6, 22, 47, -63, -4, 26, 5, -50, 
3, -4, 7, 3, 0, -20, 26, 27, -4, -2, 30, 12, 7, 6, 28, -10, 
-4, 0, -1, 0, 0, -1, 3, -1, 3, 0, 4, -1, 6, 1, 5, -1, 
7, 6, 0, 5, 3, 0, -1, -1, -5, 0, 0, -2, 1, 0, 0, -1, 
-8, 5, 5, -5, 0, 4, 0, -1, -6, 0, 0, 0, -2, 0, 0, 0, 
1, -6, -8, -1, 5, 0, 0, -1, 8, 0, 1, -2, 2, 0, -1, -1, 
2, 6, -6, 0, 5, 0, -4, 2, -5, 1, -1, 8, -2, 0, 2, 7, 
-17, -13, 18, 12, -14, -16, 26, 22, -18, -3, 29, -1, -3, 13, 21, -23, 
-3, -8, -2, 4, -6, -7, 2, -1, -2, 0, 3, -12, -2, 0, 0, -16, 
0, -2, -2, 0, -3, -2, -2, 1, -3, -1, 0, 3, 2, -1, 0, -1, 
-1, 0, 0, 1, -1, -1, 0, 2, -1, -1, 1, 0, 0, 0, 0, 0, 
-4, 4, 7, 0, 0, 10, -32, 24, 0, -6, -28, 24, 4, 10, 19, 13, 
-5, 1, 3, -1, -7, -15, -2, -16, 5, -9, 46, 9, -3, 12, 35, 13, 
0, -2, 7, -6, -8, 2, -24, 42, 3, 3, -13, 33, -1, 16, 5, 28, 
-5, 8, 6, 0, 5, 0, -1, -3, 3, -1, -3, -3, 3, 0, -1, -6, 
3, -8, 0, 2, 3, 0, 0, 2, 6, 0, 0, 3, 7, 0, 0, 1, 
-3, 8, 0, 7, 1, -5, 0, 0, 2, 8, 2, -2, 6, 0, -1, 0, 
7, 8, 0, 7, -8, 0, 0, 2, 5, 0, 0, 4, 8, 0, 0, 2, 
-4, 4, -4, 8, 0, 0, 0, -1, -5, 0, 0, -6, 4, 2, 0, -1, 
21, 1, 8, 28, -2, -7, -8, 19, -16, -24, 0, 48, -41, -26, 1, 31, 
3, 5, 2, 5, 0, 0, 0, 14, -14, -4, 7, 11, -10, 2, -8, -16, 
3, 1, 0, 1, 1, 0, 0, 0, -7, -3, -3, 1, -7, -3, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, -1, 0, -2, 2, -4, -1, -1, 0, 
2, 2, -1, 8, 0, 5, 1, 5, 1, 20, -41, 19, -3, 4, -33, 50, 
-7, -6, 3, 6, 3, 12, 9, -13, 6, -4, 11, -8, 4, -12, 70, 25, 
2, 4, 5, 0, -4, 0, -3, 5, 9, 15, -25, 53, 6, -3, -16, 40, 
2, 5, -4, 6, 6, 0, 0, 5, -6, 0, 0, 5, 0, -2, -2, 8, 
-7, 8, 0, -1, 6, 0, 0, -1, -4, 0, 0, -1, 0, 0, 0, -1, 
5, 0, 3, -5, 0, 0, -1, -3, 0, -3, 0, -2, -2, 1, 5, -3, 
-4, 8, 5, 7, -5, -1, 0, -1, -7, 0, 1, -3, 2, 0, -1, 0, 
-8, -1, -6, -3, -7, 0, -1, -1, 4, 0, 0, -2, 3, 1, 0, -5, 
5, 18, -4, 9, 14, 13, 4, 18, 22, 10, -2, 6, -23, 0, 0, 52, 
1, 1, 2, 0, 6, 4, 5, 0, 2, 0, 3, 21, -10, 3, 4, 50, 
0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, -1, -11, -4, -2, 0, 
-1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, -3, -1, -1, 6, 
};




#define layer_7_bias_size ((unsigned int)7) //array size
#define layer_7_bias_range ((nn_t)273) //multiply neuron result with range/1024

const nn_weight_t layer_7_bias[]={
95, 34, 108, 58, 127, 79, 15, };


#endif
