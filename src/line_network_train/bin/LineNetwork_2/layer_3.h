#ifndef _LAYER_layer_3_H_
#define _LAYER_layer_3_H_


#include <NetworkConfig.h>


#define layer_3_type "fc"

const sLayerGeometry layer_3_input_geometry = {4, 4, 4};
const sLayerGeometry layer_3_output_geometry = {1, 1, 32};
const sLayerGeometry layer_3_kernel_geometry = {1, 1, 32};

#define layer_3_weights_size ((unsigned int)2048) //array size
#define layer_3_weights_range ((nn_t)5731) //multiply neuron result with range/1024

const nn_weight_t layer_3_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
15, 14, 16, 11, 14, 15, 14, 11, 17, 14, 15, 11, 17, 14, 14, 11, 
-26, 55, 28, -62, -41, 50, 23, -63, -49, 22, 19, -44, -59, 7, 42, -42, 
-31, 33, 44, -71, -38, 29, 52, -64, -41, 19, 56, -56, -36, 1, 53, -44, 
-23, 52, 31, -72, -34, 52, 37, -68, -47, 44, 41, -59, -55, 24, 39, -51, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-17, -18, -19, -18, -18, -18, -20, -17, -17, -18, -20, -18, -17, -18, -20, -19, 
-5, 22, -21, 21, 34, 42, -27, 12, 20, 27, -44, 49, -47, 21, -31, 127, 
-9, 0, -6, 13, 12, 11, -5, 6, 28, 26, -35, 8, -41, -5, -35, 49, 
-9, 14, -27, 13, 10, 21, -25, 5, 35, 35, -58, 9, -21, 9, -47, 68, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 1, 1, -1, 0, 0, 2, -1, 0, 1, 2, 0, -1, 0, 
10, -9, 35, -17, -6, -23, 49, 6, 24, -39, 18, -6, 115, -7, 12, -111, 
15, -5, 15, 2, 3, -20, 25, 10, 31, -32, 8, 9, 104, 0, -7, -43, 
22, -14, 20, -16, 0, -18, 29, -4, 7, -39, 21, 9, 75, -14, 4, -52, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-18, -18, -18, -17, -17, -19, -20, -18, -16, -19, -20, -18, -15, -18, -19, -17, 
20, 20, 4, 25, 15, 6, 11, 41, 25, -51, -36, 65, 95, -14, -26, 18, 
21, 11, -13, 2, 18, -1, 6, 12, 46, -23, -42, 23, 93, -14, -56, 3, 
27, 8, -17, 1, 14, 5, -2, 14, 22, -38, -40, 42, 65, -35, -47, 32, 
-12, -14, -14, -13, -12, -14, -15, -13, -11, -13, -15, -13, -11, -14, -15, -14, 
-6, 14, -6, 15, 17, 15, -14, 25, 5, 0, -11, 52, -32, 9, -13, 100, 
0, 6, 10, 12, 6, 4, -3, 13, 9, 0, -27, 20, -34, -15, -28, 53, 
0, 15, -4, 6, 4, 9, -12, 9, 13, 0, -30, 21, -23, -11, -19, 62, 
2, 1, 2, 3, 1, 1, 2, 2, 0, 0, 3, 1, 1, 1, 3, 3, 
-11, -57, 47, 5, -39, -61, 59, 12, -31, -21, 68, -30, -16, 5, 54, -82, 
-9, -48, 20, 41, -30, -55, 17, 40, -58, -59, 39, 30, -26, -21, 43, -4, 
-7, -53, 44, 21, -24, -59, 44, 26, -50, -51, 61, 14, -23, -12, 58, -35, 
0, -3, -1, 0, -1, -2, 0, -1, -2, -2, -1, -1, -2, -2, -1, 0, 
-43, 16, 21, -14, -41, 5, 30, -6, -41, 13, 41, -19, -72, 36, 36, -51, 
-38, -4, 35, -19, -38, -12, 29, -17, -40, -21, 37, -18, -44, -15, 45, -30, 
-34, 23, 24, -15, -42, 12, 25, -11, -51, 9, 34, -11, -61, 21, 38, -31, 
2, 0, 3, 4, 3, 0, 3, 4, 0, 0, 2, 4, 1, 0, 3, 5, 
10, -33, 2, 36, -14, -50, 13, 47, -65, -31, 51, 27, -65, 11, 18, -5, 
20, -6, -8, 35, -4, -22, -17, 37, -62, -54, -3, 39, -76, -30, 6, 27, 
24, -19, 8, 38, 2, -36, 3, 43, -51, -57, 21, 45, -71, -24, 30, 24, 
-8, -10, -11, -10, -10, -11, -11, -10, -8, -11, -12, -10, -8, -11, -12, -10, 
0, 16, -8, 21, 15, 14, -14, 35, -22, -19, -4, 65, -35, 13, -14, 88, 
11, 11, 5, 12, 11, 7, -5, 14, -3, -14, -27, 29, -37, -26, -28, 54, 
9, 17, -2, 11, 10, 12, -12, 17, -3, -12, -24, 38, -37, -19, -14, 70, 
-14, -16, -17, -15, -13, -15, -18, -15, -13, -15, -18, -15, -13, -16, -17, -15, 
0, 23, -24, 20, 26, 36, -31, 25, -18, 2, -27, 66, -59, 20, -32, 110, 
3, 8, -5, 8, 14, 15, -10, 5, 2, 5, -35, 17, -57, -21, -33, 51, 
0, 17, -23, 11, 12, 23, -28, 9, 7, 12, -48, 24, -50, -6, -38, 73, 
0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 
0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 
13, 12, 14, 14, 12, 12, 14, 14, 11, 12, 14, 15, 12, 12, 13, 15, 
-34, -29, 44, -28, -37, -20, 52, -29, -23, 10, 52, -56, -18, 19, 47, -98, 
-43, -45, 37, 14, -44, -42, 39, 10, -44, -28, 56, -4, -20, -5, 58, -28, 
-42, -31, 45, -13, -41, -25, 44, -17, -42, -6, 54, -33, -23, 17, 50, -65, 
-3, -4, -5, -3, -4, -4, -5, -5, -4, -5, -5, -4, -4, -4, -5, -4, 
16, 20, -14, 42, 15, 7, -11, 55, -60, -24, 20, 71, -76, 29, -11, 65, 
16, 24, -6, 23, 8, 14, -17, 25, -45, -28, -30, 42, -93, -32, -21, 54, 
23, 27, -7, 30, 16, 15, -14, 37, -29, -24, -16, 57, -82, -19, -3, 69, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, -1, -4, -2, 0, -1, -2, -2, 0, 0, -3, -3, 0, 0, -3, -4, 
11, 8, 19, 23, 31, -29, -31, -5, 82, 28, -47, -98, 43, 12, 5, -76, 
-4, 16, 9, 24, 13, 0, -23, 11, 50, 28, -71, -56, 39, 41, -43, -72, 
17, 24, 21, 14, 19, -3, -3, 13, 65, 14, -62, -50, 77, 32, -32, -110, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 
16, 16, 16, 13, 16, 15, 15, 13, 16, 16, 15, 12, 18, 17, 14, 12, 
-4, 45, -36, -7, 6, 32, -49, -39, 14, 64, -16, -88, -58, 27, 9, -33, 
-1, 47, 6, -43, 4, 41, -1, -51, 2, 53, 5, -77, -41, 39, 22, -51, 
-2, 54, -18, -14, 4, 44, -23, -25, 18, 59, -18, -74, -12, 53, 5, -81, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-11, -13, -13, -11, -11, -13, -14, -12, -10, -14, -14, -12, -10, -13, -14, -12, 
-4, -28, 18, 1, -12, -32, 41, 33, 16, -68, 5, 39, 112, -29, 1, -89, 
31, -15, 0, -6, 20, -27, 10, 7, 42, -48, -3, 27, 116, -15, -26, -31, 
10, -29, 5, -3, -2, -33, 16, 13, 2, -63, 15, 45, 71, -41, -6, -13, 
1, 1, -1, -3, 2, 1, -1, -2, 2, 2, -1, -3, 3, 1, -2, -2, 
14, 9, 7, 20, 33, -19, -41, -11, 79, 37, -49, -100, 32, 15, 2, -68, 
-3, 17, 5, 22, 13, 4, -26, 8, 46, 33, -66, -59, 27, 42, -39, -67, 
16, 24, 13, 14, 20, 2, -13, 9, 65, 20, -65, -55, 69, 36, -33, -107, 
-11, -13, -12, -12, -11, -13, -12, -13, -10, -13, -13, -13, -11, -13, -13, -13, 
-1, -25, 18, -6, -6, -27, 40, 23, 28, -60, -3, 25, 117, -25, 0, -114, 
32, -15, 1, -8, 23, -25, 14, 3, 51, -42, 0, 17, 123, -8, -21, -50, 
11, -27, 3, -5, 0, -27, 16, 8, 11, -54, 11, 35, 79, -34, -11, -31, 
};




#define layer_3_bias_size ((unsigned int)32) //array size
#define layer_3_bias_range ((nn_t)13) //multiply neuron result with range/1024

const nn_weight_t layer_3_bias[]={
66, 56, 38, 93, 124, -6, 55, 0, 0, 0, 56, -4, -4, 19, 61, 90, 
66, 101, 40, 30, -17, 127, 89, -5, 76, -5, 121, -1, -2, 27, 70, 53, 
};


#endif
