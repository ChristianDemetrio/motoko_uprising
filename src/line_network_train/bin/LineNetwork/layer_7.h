#ifndef _LAYER_layer_7_H_
#define _LAYER_layer_7_H_


#include <NetworkConfig.h>


#define layer_7_type "output"

const sLayerGeometry layer_7_input_geometry = {4, 4, 12};
const sLayerGeometry layer_7_output_geometry = {1, 1, 5};
const sLayerGeometry layer_7_kernel_geometry = {4, 4, 12};

#define layer_7_weights_size ((unsigned int)960) //array size
#define layer_7_weights_range ((nn_t)972) //multiply neuron result with range/1024

const nn_weight_t layer_7_weights[]={
0, 0, 0, 0, 0, -20, -24, 0, 0, -4, 55, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 12, 0, 0, 0, -10, 22, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 26, 127, 0, 0, -1, 80, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -14, -15, 0, 0, 16, -17, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -33, -18, 0, 0, -3, -2, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -4, -6, 0, 0, 2, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 18, 0, 0, 0, 10, 2, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -15, -5, 0, 0, -9, 2, 0, 0, 0, 0, 0, 
-9, 10, 0, -1, 0, 4, 0, -5, 0, 0, 0, 1, 0, 0, 0, 0, 
6, 0, -2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 
0, 0, -1, -24, 4, -1, -1, -5, 0, -1, -5, 3, -4, -9, 0, 0, 
-14, 0, -2, -1, -6, -4, -4, -3, -1, -3, -1, 0, -3, -3, -3, 0, 
0, 0, 0, 0, 0, -7, -6, 0, 0, -8, -44, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 49, 38, 0, 0, -11, -25, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -62, -65, 0, 0, -16, -34, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, -18, -14, 0, 0, -4, 44, 0, 0, 0, 0, 0, 
4, 5, 2, 3, -2, 15, 0, -4, -4, -2, -8, 4, 0, 0, 1, -3, 
4, -4, 4, -2, 2, 29, -2, 1, -3, 0, -3, 5, 2, -1, 1, 4, 
5, 2, -1, 0, -3, 9, 6, -3, 0, 21, 7, -3, 5, 3, 0, 4, 
0, -3, -5, 2, 2, -28, -1, 5, 5, -2, -7, -5, 2, -2, -1, 4, 
37, -4, -7, -9, 4, -7, -1, -5, 0, 1, 0, -3, 3, -1, 1, -1, 
4, 2, -4, -2, 3, 2, -1, -1, 2, 0, -1, -3, 0, 0, -2, -2, 
39, -11, -14, -24, 8, -3, -4, -7, 7, -2, -8, 1, -4, -3, -4, -3, 
15, 0, 4, 0, -2, -1, 0, -2, -2, 1, 0, 0, 10, -4, -2, 1, 
1, 4, -5, 0, -4, -24, 1, -4, 2, -8, -17, -4, 4, -2, 2, 2, 
0, 0, 4, 0, 1, -78, -1, 2, 4, 43, -7, -5, 5, -3, 3, -1, 
2, -4, -3, 3, -5, 40, -38, 3, 1, 74, -19, -5, -3, -5, 1, 0, 
-5, 4, -2, -5, 0, -14, -19, 0, 2, -24, -25, 0, -4, 3, -5, 4, 
1, 2, 3, 2, -1, 14, -2, -5, -2, 10, 8, 2, 1, -2, -2, 5, 
-5, 1, -4, -5, 1, -15, 2, 2, -5, 0, 0, 2, -6, 0, -1, 5, 
3, -2, -4, -3, 6, -15, 1, 2, -2, -25, 0, -4, -2, 5, 0, 1, 
4, 0, -5, 0, -3, 55, -21, 3, 0, 10, -4, 1, -5, -3, -4, 0, 
-14, 4, -9, -8, 0, 3, -3, 2, 0, -1, 0, 0, -6, 0, -1, 2, 
-4, 0, 3, 3, -3, 0, 1, 1, -2, 0, 0, 0, -1, 2, 0, -1, 
-26, 11, -8, -15, -3, 3, 6, -8, -3, 2, 0, -5, 4, 8, 0, 1, 
7, 6, 1, 0, 7, 7, 3, 2, 2, 6, 1, 0, -8, 10, 0, 0, 
3, 5, 0, -5, 0, 35, -61, 0, 5, 20, -30, 0, 1, -4, -5, -1, 
3, 2, 4, 1, -4, 38, -61, 5, -4, -19, 32, 2, -1, -3, 2, -3, 
-2, 0, 2, -2, 1, 7, -20, -3, 3, -47, -2, 4, -3, -6, 5, -1, 
5, 2, 5, -1, -2, 40, -52, -5, 0, 1, -5, -4, -1, -4, 4, 0, 
-4, 0, -4, -2, -3, 5, 12, -3, 4, 3, 2, 0, -6, 3, 2, 0, 
4, 3, 1, 0, 0, -1, 20, 5, 2, -3, 1, 4, 1, 1, -4, -1, 
-4, 1, 5, -2, 0, 2, 13, -3, -1, -7, 0, 3, 0, -5, 4, -5, 
2, 0, 2, -5, -3, -11, 46, -5, 5, 2, 9, 5, -1, 0, -2, -4, 
-7, -9, 9, -6, 0, -5, 7, 1, -2, 0, 3, 0, 2, 1, 0, -3, 
-2, -2, 6, 0, -1, -1, 0, 2, 0, 0, 0, 2, 0, -3, 0, 0, 
-10, 0, 12, 19, -7, 0, 7, -2, 2, 0, 8, 6, 0, 2, 0, -4, 
-1, -1, 0, -12, 2, 0, 4, 1, 0, 0, 0, -4, 0, -2, 9, -1, 
1, 2, -3, -6, 2, 10, 89, 0, 1, 1, 42, -2, -4, 2, -5, -2, 
0, 1, 2, -1, 5, -14, 28, -1, 2, -2, -16, -1, 2, 0, -3, 5, 
1, -1, 2, -2, -2, -10, -23, 1, 5, -13, -12, 2, -1, 5, 0, 2, 
-3, 3, 5, -4, 1, -5, 98, 0, 3, 7, 0, 3, 3, 1, 4, -6, 
4, -1, 5, -4, 1, -6, 2, -1, -2, -3, 0, 2, -4, -6, -1, 0, 
1, 3, 5, 4, 3, -5, -13, -1, 2, -2, 0, -2, -5, -5, -5, -1, 
0, -4, -5, 3, 3, -14, -18, 0, 5, 0, -12, -5, -3, -2, 1, -4, 
4, 3, -1, -3, -1, 2, -17, 3, -5, -2, 2, 0, 5, -5, 0, -2, 
-8, -4, 9, 26, -6, 4, -2, 4, -1, 1, -2, 0, 0, 1, -3, 0, 
-4, -1, -1, 1, -2, 0, 0, -1, 0, 1, 0, 0, 0, 2, 1, 1, 
-3, 0, 12, 46, -4, 1, -5, 27, -3, 2, 2, -5, 3, 1, 4, 6, 
0, 0, -2, 15, 2, 2, -1, 3, 2, 0, 1, 4, 1, 0, 0, 1, 
};




#define layer_7_bias_size ((unsigned int)5) //array size
#define layer_7_bias_range ((nn_t)289) //multiply neuron result with range/1024

const nn_weight_t layer_7_bias[]={
113, 127, 84, 51, 49, };


#endif
