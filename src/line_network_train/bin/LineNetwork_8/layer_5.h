#ifndef _LAYER_layer_5_H_
#define _LAYER_layer_5_H_


#include <NetworkConfig.h>


#define layer_5_type "output"

const sLayerGeometry layer_5_input_geometry = {4, 4, 16};
const sLayerGeometry layer_5_output_geometry = {1, 1, 8};
const sLayerGeometry layer_5_kernel_geometry = {4, 4, 16};

#define layer_5_weights_size ((unsigned int)2048) //array size
#define layer_5_weights_range ((nn_t)964) //multiply neuron result with range/1024

const nn_weight_t layer_5_weights[]={
-1, -1, 1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1, 
-1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 
1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, 1, 
1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 
1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 
-1, -1, 1, 1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 
-1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 
1, 1, -1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 
1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 
-1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 
1, 1, -1, -1, 1, 1, 1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 
-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 
1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 
-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, -1, -1, 
1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 
1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 
0, 0, -2, 3, 2, 8, 3, 0, 3, 5, 13, -8, 3, 8, 5, 0, 
3, -3, 3, -1, -3, 6, 4, 2, 0, 6, 5, 1, 0, -1, 1, -1, 
2, 0, -3, -2, 2, 11, 2, -1, 0, 12, 8, 2, 0, 1, 5, 0, 
2, 2, 0, 2, 1, -6, -9, 4, 3, -1, -11, 127, 1, -5, -7, -1, 
0, 0, 0, 0, 0, -3, 0, -7, -3, -1, -2, -20, 0, -2, 1, -1, 
3, -3, 1, 0, 1, 37, 0, 3, -1, 39, 23, -1, 3, 89, -16, -3, 
-3, 1, 0, 2, -1, -3, -9, -20, 2, -3, -4, 7, 3, 2, -89, -20, 
-3, -3, 0, 2, 3, -8, 0, -6, 0, 36, -3, -2, 0, -23, -19, -4, 
-4, 4, 3, 3, 0, 9, 4, 5, -13, 12, -2, 5, 6, 11, -4, 0, 
-3, -1, -3, 0, -5, 5, 5, 5, -11, -2, 8, 7, 0, 0, 0, 0, 
7, 5, 0, 0, 3, 0, -1, 0, 0, 6, -9, -4, -6, 7, -8, 0, 
14, -4, 0, 4, 2, -6, -3, -3, 31, -12, -1, -7, 49, -18, -4, 2, 
-9, 2, 0, -1, -1, -1, -3, -5, 0, 2, -4, -4, -24, 11, -1, -4, 
5, 2, 1, 10, 0, -6, -2, 0, 20, 1, -3, -8, -34, 0, 1, -12, 
-2, 3, 2, 2, 0, -3, -1, -1, 11, 5, -2, -7, -15, 1, 3, -2, 
-3, 0, 0, 1, 5, -1, 0, 0, 12, 2, -3, -2, -18, 0, -2, 0, 
-1, 3, 0, -2, -2, 3, 12, -3, -4, 8, 3, 1, -1, 1, 6, 3, 
0, -1, 0, 0, 2, -2, 1, 2, 1, 0, 1, 3, 0, 2, -3, 0, 
-1, 2, 0, 0, 3, 3, 13, 0, 1, -1, 17, 8, 3, -10, 4, 5, 
-3, 2, -3, 0, -3, -15, -6, 31, 2, -10, -2, -17, 1, -1, 16, -5, 
-1, 4, 2, -1, -1, 1, 2, -9, 2, 1, 0, -9, -2, -30, 1, -12, 
3, -2, 1, 0, 3, -16, -10, 0, 1, -16, -26, -2, 1, -47, -42, 3, 
0, 0, -1, 3, 2, 0, -7, -13, -2, 5, -13, -13, 4, 9, 100, 89, 
-4, 0, 1, 2, -3, 79, 31, -5, 1, 15, 66, -6, 3, -10, 89, -1, 
10, -3, 3, 2, 2, -4, 0, 8, 2, -13, 5, 0, 9, -8, 10, 1, 
-7, -1, 4, 4, -7, -2, 3, 6, -2, -15, 1, 4, 0, 0, 0, 0, 
-4, -4, 1, -2, 0, -2, 0, -2, -3, -3, 2, -1, 7, -14, 11, 1, 
-12, 6, 0, -4, 3, 4, 1, -2, 8, 12, 0, -3, -11, 19, 8, 3, 
4, 1, -4, -2, 2, 6, -5, -2, -6, 11, -4, -3, -10, 21, -4, -4, 
-1, -6, 0, -5, 3, -1, -2, -2, -10, 6, -2, -8, -4, 6, -9, -8, 
2, 0, -2, -2, 1, 2, -1, -2, -2, 3, -2, -3, -7, 1, -4, -2, 
7, 0, 0, -2, 0, 1, 0, -2, -6, 0, 2, -1, -4, 1, 3, 0, 
-3, 3, 3, -3, 0, 3, 2, 1, -3, -2, 8, 4, 0, -5, 3, 1, 
0, -2, 4, 1, 0, 0, 0, 0, -2, -4, -2, 5, 3, 0, 5, 0, 
3, -2, 0, 1, -3, 0, 5, 1, 2, 0, 3, 2, -1, 3, 1, 7, 
-2, 2, 1, -1, 3, -12, -11, -7, 4, -9, -7, -6, 0, -5, -20, 1, 
1, 4, -3, 3, -1, 8, 1, 3, -2, 11, 2, 7, -2, 71, 0, -8, 
1, -1, 2, 3, 3, 2, 29, -2, 0, -4, 9, -3, -2, -4, 85, 4, 
0, 2, 4, 0, 3, -4, -2, 24, 2, 6, 2, 71, 4, 7, -5, -16, 
-3, -4, 3, -3, 2, -43, -41, -30, 2, -10, -54, -20, 4, -22, -45, -30, 
0, -2, 2, -7, 4, -5, 5, -9, 0, 1, -5, -11, 2, -2, 2, 2, 
1, -4, 8, 8, 3, -8, 5, 7, 5, -1, 1, 6, 0, 0, 0, 0, 
-4, 0, 5, -4, -3, -2, 4, -2, -4, -3, 7, 1, -5, -5, 1, 3, 
15, 21, 0, -2, 5, 19, 2, -5, -9, 13, -1, -2, -5, 0, 0, 2, 
-1, 1, 1, -3, 0, 0, 3, -4, -1, 1, 6, -4, 0, -12, 5, -1, 
0, -1, -5, 0, -2, 0, -5, -2, -6, -1, -1, -3, -6, -7, -3, 0, 
0, 4, 3, -1, -1, 3, 1, -2, -4, 0, 0, -2, -4, -2, 0, 0, 
-3, 1, 4, -5, -1, 0, 2, -2, 0, 0, 3, 0, 0, -3, 1, 0, 
-2, 1, 3, 0, 1, -7, 3, 8, 3, -3, 5, 7, -4, -6, 7, 0, 
1, 0, -4, 3, -1, -1, 5, -1, -1, -6, 3, -7, 1, -1, -2, 1, 
0, 1, 0, 3, 1, 4, -2, 10, -2, 1, 6, 8, 0, 6, 1, 5, 
-2, 0, 3, 3, 2, -10, -21, -4, -2, -7, -5, -2, 2, -1, -1, 7, 
-3, 0, 0, 3, -1, 11, -5, 0, 1, 11, 0, -3, -2, -21, -45, -49, 
-3, -3, -2, -2, 1, -2, -2, 2, 0, 1, 7, -5, -1, 0, -5, -39, 
-3, 0, -3, -2, 2, 44, 0, -20, 3, 75, -2, -38, -1, 82, 0, -11, 
1, -2, 2, -4, 0, -6, 9, 76, -1, -5, 1, 63, -2, 8, -4, 96, 
3, 12, -10, 8, 1, 8, -13, 10, -6, 5, -8, 12, -2, 9, 0, 10, 
10, 8, -7, 2, 6, 6, -4, 5, 4, 0, -4, 1, 0, 0, 0, 0, 
-2, -2, -5, 3, -1, -1, -1, 4, 1, 0, 0, 4, 1, 2, 1, -1, 
0, -10, 13, 7, 0, -4, 12, 1, 1, 2, 8, -2, 2, 4, 3, -6, 
0, 0, 8, -1, 0, 0, 6, -2, -1, 0, 8, -2, 1, -1, 5, -6, 
0, 0, -2, -3, -1, -3, -1, -4, -2, 0, -2, -6, -9, -6, 0, 2, 
-1, -5, -1, -2, -1, -3, 0, -2, -1, 0, 1, -3, -2, 0, 1, -8, 
-2, -1, -1, 5, -3, -1, 0, 3, -3, -1, 1, 2, -1, 0, 2, 0, 
2, -1, 2, 0, 3, 0, -2, 6, -1, -1, -4, 7, -2, 0, -9, 5, 
0, -2, 0, 2, -3, -1, -4, 0, -1, 0, 0, -4, -4, -3, 0, 0, 
0, 3, 2, -2, 0, -3, 7, 5, -2, -2, 10, 5, 2, 1, 5, -3, 
-1, 1, -2, 1, -1, 44, 85, -6, 1, 0, 11, -7, 1, -1, -15, -3, 
0, 1, 0, -2, -1, -17, -22, 0, 4, -24, -27, -1, 0, -5, 61, 113, 
-4, -1, 2, 2, 2, -4, -3, 17, 3, -2, -1, 45, 2, -2, -6, 111, 
-2, -3, -4, 1, -4, -24, -25, -8, 1, -44, -26, -17, 3, -50, -1, -13, 
0, 2, 2, -3, 0, -7, 3, -19, 2, -5, 1, -14, -1, 1, 0, -47, 
2, 1, 4, 4, 0, 1, 7, 3, -4, -6, 1, 16, -2, -1, 15, 11, 
-1, 0, -1, 0, 2, 2, -2, -4, -1, 0, -6, 10, 0, 0, 0, 0, 
1, -1, -2, 4, -4, -2, -2, -2, -6, -3, -1, 1, 4, 0, 0, 4, 
0, -1, -2, -10, -1, -6, 2, 17, 0, 2, 17, -10, 1, 0, 23, -44, 
0, -2, -2, 5, -4, -3, -4, 12, -3, -2, 0, 6, 0, 0, 2, 1, 
1, 0, 0, -3, -1, -3, -4, 1, -4, -4, 1, -19, -6, -1, -15, -21, 
1, 0, 0, 1, -1, -2, 0, 5, -3, 0, 5, 1, -2, -1, 3, -5, 
1, 0, -1, 1, -2, 0, -2, 1, -6, -1, -3, 3, 0, -2, -2, 3, 
1, 2, -3, 3, -2, 1, 0, 1, -2, -6, -5, 11, 3, -4, -3, 4, 
-4, 2, 2, 4, 0, -1, -7, -2, -2, -2, -1, 0, -2, -4, -2, -3, 
0, 4, 3, 1, -1, 2, 2, -1, 0, 0, 1, 6, 2, 6, 6, 0, 
0, -1, 0, 1, -2, -5, -19, -2, 3, 51, 46, -10, 0, 8, -16, 5, 
0, -3, 0, 0, 1, 0, 68, -2, -4, 2, 93, 0, -1, -5, 4, -32, 
-2, 4, 0, 0, 2, 0, -6, -3, 2, -3, -4, -18, -2, -3, -2, -43, 
3, 1, 2, 0, -2, -2, -30, -5, -1, -32, -39, -10, 1, -26, -1, -9, 
2, 3, 2, 1, -3, -8, 3, -9, -3, -3, 2, -6, 0, -6, -4, -13, 
5, 3, 6, -7, 2, 8, 11, -11, 7, 15, 5, -23, 5, 0, 0, -10, 
6, 4, 2, -6, 5, 2, 2, -7, 9, 8, 3, -15, 1, 0, 0, 0, 
0, 1, 0, -1, 5, 2, 0, 0, -3, -3, 0, -8, -9, -1, -3, -10, 
-1, -1, 0, 14, -1, 0, -4, 1, -1, -5, 0, 39, 2, 2, -5, 59, 
0, 0, -2, 0, 1, 0, 0, 1, -10, -4, -5, 6, -2, -1, 0, -3, 
-4, 1, 3, 1, 3, 4, 1, -2, -7, -7, 6, 26, -17, -1, 8, -38, 
1, 0, 2, 1, 2, 1, 0, 0, -6, -4, 0, 5, -7, -1, -4, -8, 
0, -1, -1, 2, 2, 0, -1, 1, -1, -1, -1, 1, -11, -3, -2, 0, 
-3, -2, -3, 1, -1, 0, 1, 2, 0, 6, 1, -4, 3, -5, 3, 0, 
0, 1, 1, 1, 0, -2, -4, -3, -3, 1, -3, 0, 3, 4, 0, 5, 
-2, 0, -3, 0, 0, 7, -1, 0, -1, 3, -2, -3, 0, 7, -8, 0, 
-1, -3, 3, 0, -1, 6, -13, -2, -2, -10, -25, -15, 1, 14, 45, -11, 
1, -3, 0, 1, -3, 2, -52, -8, 1, 0, -70, -13, -1, -4, -30, 2, 
-1, -1, -2, -4, 4, -2, -3, -16, -4, 7, -6, -19, 3, 0, -6, -34, 
1, 0, 0, -2, 2, 0, 71, -8, -1, -4, 83, 3, 3, -24, 4, -15, 
0, 3, 0, 1, 2, -8, -3, 0, -2, -12, -12, 1, -3, -4, -15, 6, 
5, 5, 7, 0, 1, 5, 2, 0, 9, 8, 1, -6, 7, 9, -5, 1, 
-5, -4, -6, -9, -4, -3, -5, -10, 10, 13, -7, -23, 0, 0, 0, 0, 
0, 0, 0, 0, -1, 0, -1, 3, 8, 3, 0, 1, -6, -4, 0, 3, 
-4, -6, -9, -8, 2, -6, -9, -9, 0, -6, -13, -15, 0, 14, -16, -20, 
-3, -2, 1, 2, -1, -1, 0, 0, 0, -2, 0, 7, -5, -8, -12, 21, 
0, 0, 0, 4, 0, 3, 5, 6, 0, 5, 0, 17, -12, -17, 17, 97, 
0, -1, -2, 2, 0, 0, 0, 1, 0, 0, 0, 10, -10, 0, -1, 35, 
0, 0, 0, -3, 0, 0, 1, -2, 0, 0, 1, -3, 1, 0, 0, -4, 
};




#define layer_5_bias_size ((unsigned int)8) //array size
#define layer_5_bias_range ((nn_t)186) //multiply neuron result with range/1024

const nn_weight_t layer_5_bias[]={
91, 92, 120, 74, 53, 98, 110, 127, };


#endif
