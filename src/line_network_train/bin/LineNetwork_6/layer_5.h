#ifndef _LAYER_layer_5_H_
#define _LAYER_layer_5_H_


#include <NetworkConfig.h>


#define layer_5_type "output"

const sLayerGeometry layer_5_input_geometry = {4, 4, 8};
const sLayerGeometry layer_5_output_geometry = {1, 1, 7};
const sLayerGeometry layer_5_kernel_geometry = {4, 4, 8};

#define layer_5_weights_size ((unsigned int)896) //array size
#define layer_5_weights_range ((nn_t)366) //multiply neuron result with range/1024

const nn_weight_t layer_5_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-14, -7, 13, -16, -11, 51, -31, 0, 0, 30, -20, -9, -8, 93, -18, -5, 
0, -5, 16, -7, -15, -39, 6, 4, 13, -64, 18, -1, -2, -43, 29, 1, 
2, 6, 6, 3, -13, 63, -14, -17, -7, 47, 8, -33, -14, 40, 83, 1, 
8, -16, -7, -3, -16, 15, 22, 4, 14, 21, 16, -40, 11, 14, 18, 8, 
22, 22, 1, 5, 19, 8, 3, -1, 12, 16, 6, 3, 7, 13, 6, 6, 
-27, -33, 40, 33, 0, -77, 28, 13, 20, -86, 7, 16, 2, 4, 3, 6, 
0, -22, -24, -11, 10, -1, -15, -13, -2, 6, -11, -7, -25, -5, -13, -7, 
22, 14, -16, 4, -31, 0, 3, -2, -9, -15, 24, 6, -2, -60, 16, 19, 
-1, -15, -13, 5, -7, -39, 67, 2, -13, -23, 56, 6, -8, -63, 39, 1, 
10, 0, -6, 10, 14, 19, 55, -15, -3, 9, 51, 4, -10, -6, 38, -12, 
3, 14, 14, 4, 1, -33, 33, 28, 1, -11, 22, 20, 5, 25, 21, 46, 
4, 13, -11, -8, 4, 28, -65, 4, 6, -1, -26, 2, 6, -3, -20, 14, 
-20, -1, 7, -19, -20, -3, 14, -4, -9, 18, 0, -3, -11, -9, -1, 5, 
34, 79, 6, 27, 10, 62, 3, 12, 18, 47, -6, 3, -3, -2, -3, 1, 
-9, 5, 18, -5, -7, 1, 10, -5, -5, -2, 5, -6, -2, -5, 0, -13, 
-8, 4, 53, -1, -9, 0, 39, -12, -8, -2, 18, -14, 7, -9, 20, -1, 
16, 13, 0, 12, 15, 20, -6, 14, 15, 16, 11, -12, 2, 46, 71, -88, 
-6, -9, 8, 4, -7, 1, -30, 43, -11, 5, 1, 34, 14, 1, 1, 10, 
-14, 16, 1, 11, -10, 3, -28, -3, -1, -3, -38, 13, 11, -12, -57, 12, 
5, 10, 5, -10, -14, -31, 109, -10, 2, 25, 105, 3, -15, 19, 30, -35, 
10, -8, 19, 16, -3, 8, 16, 18, 6, 8, 24, 16, 5, 2, 20, 5, 
12, -5, -21, -8, 19, 4, -36, 27, 8, -5, -45, 58, 2, 4, 5, 4, 
0, -6, -6, -7, -6, -12, -2, -1, -6, 0, 14, -9, -10, 4, 12, -37, 
-38, -11, -33, -7, -42, -13, -29, 25, -13, -7, -3, 30, 44, 4, -4, -18, 
-1, 6, 5, -9, -15, -4, -20, 63, -16, -5, -27, 50, 9, -29, -70, 79, 
-13, -13, 2, 8, 4, 10, -13, 6, -4, 14, -11, 54, 9, -9, -4, 9, 
6, 2, -14, 13, -13, -15, 0, 2, 10, -12, 4, 18, 7, 9, 0, -16, 
-3, -4, 7, 3, 6, 7, -59, -77, -13, -14, -59, -92, 13, 21, 7, -32, 
-3, -5, -5, 21, -5, 9, 10, 14, 8, -9, -4, 7, -6, 2, 13, 18, 
7, -7, 39, 0, 21, 33, 76, -41, 30, 36, 74, -37, 0, 0, 3, 0, 
13, 9, 8, 14, 17, 12, 2, 8, -13, -15, -11, 29, -28, 0, -7, 10, 
40, 11, 17, 40, 8, 11, 7, 11, -94, -35, -42, 25, -20, -6, 12, 15, 
-9, -1, 13, 4, -16, -1, -8, -53, -13, 5, -3, -12, -8, -32, -46, 51, 
-10, 11, 2, -9, 6, -32, -30, -45, 11, -10, -34, -87, 4, 17, -44, 40, 
-6, 0, -6, 10, -1, -13, 13, -11, -9, -42, -6, -10, 14, -44, -37, -42, 
9, 5, 10, -7, 10, -29, -3, 121, -13, -4, -26, 127, -13, -8, 14, 42, 
20, 6, 24, 17, 20, 21, 22, 13, 21, 20, 6, 20, 24, 20, 18, 33, 
-21, -17, -51, -35, -20, -28, -56, -15, 71, 37, -67, -90, 10, 15, 7, 12, 
-10, 0, -8, 4, -5, 3, 4, 3, 13, 21, 13, -13, -52, -1, 15, 77, 
-12, -7, -7, -39, -3, -5, 8, -14, -28, 0, 24, -15, -81, -57, -36, -9, 
};




#define layer_5_bias_size ((unsigned int)7) //array size
#define layer_5_bias_range ((nn_t)301) //multiply neuron result with range/1024

const nn_weight_t layer_5_bias[]={
65, 61, 71, -27, 56, 18, 127, };


#endif
