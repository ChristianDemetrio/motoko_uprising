#ifndef _LAYER_layer_5_H_
#define _LAYER_layer_5_H_


#include <NetworkConfig.h>


#define layer_5_type "dense convolution"

const sLayerGeometry layer_5_input_geometry = {4, 4, 12};
const sLayerGeometry layer_5_output_geometry = {4, 4, 18};
const sLayerGeometry layer_5_kernel_geometry = {3, 3, 6};

#define layer_5_weights_size ((unsigned int)648) //array size
#define layer_5_weights_range ((nn_t)3809) //multiply neuron result with range/1024

const nn_weight_t layer_5_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-32, -68, -7, -10, -6, 26, -7, -12, -33, -11, 4, -33, -51, -6, 1, 0, 
-3, 0, 1, 1, 6, 0, 45, 3, 28, -66, 23, 40, -38, -18, -3, 20, 
35, 0, -86, -30, 23, -6, -51, 1, 28, 23, -17, -36, 12, -27, 0, 1, 
13, 41, 21, -9, -72, -15, 14, -6, -15, 10, 37, 23, -22, -41, 4, 12, 
-63, 0, 14, 37, 2, 9, 6, 10, 10, 9, 11, 10, 18, 0, 0, -1, 
0, -1, 0, 0, 0, -1, 2, 8, 9, 6, 13, 14, 9, 12, 20, 1, 
10, 9, 9, 13, 12, 12, 11, 19, -8, -7, 13, -14, -9, -21, -12, -28, 
-28, -4, 11, -3, 3, -7, -10, 14, -75, -29, 0, 1, 3, 1, 2, 35, 
-43, -127, 15, -27, -1, 24, -23, 13, -10, -22, 40, -102, -39, -96, -33, -40, 
-88, -14, -4, -62, -6, -2, -1, -6, 6, 2, 11, -10, -71, -14, -8, -5, 
-3, 5, 5, 0, -13, 0, 10, -31, 9, -3, -14, 18, 10, -20, 48, 8, 
-12, -3, 10, -14, 0, 12, 7, 15, 14, 0, 1, 0, 0, 2, 2, 0, 
0, 1, -10, -3, 8, -9, 0, 13, 9, 17, 15, -10, -5, 9, -10, -4, 
10, 11, 18, 16, -14, 3, -33, -30, 5, -21, -21, -43, -66, 0, -3, -18, 
-3, 0, -13, -40, -106, 34, -2, -2, 0, 0, 0, -51, -39, -3, 0, 10, 
2, -3, 14, 37, -32, 19, 51, 5, 14, -21, 7, 3, -17, 7, 0, 10, 
9, -2, -12, 13, -6, 2, -1, -2, -24, 15, 6, -7, 5, 1, -13, -22, 
-3, 27, -5, -13, -13, 2, 21, -18, 1, -14, 48, -34, -6, -20, 10, -2, 
-15, 14, 17, 13, 27, 1, 0, 1, 0, 0, 1, -2, -1, 0, -8, -14, 
8, -5, -14, 12, 15, 14, 23, -7, -17, 11, -4, -13, 14, 16, 13, 25, 
-4, -24, -54, 2, -20, -57, 27, -21, -51, 1, -45, 3, 3, -34, 4, 17, 
-43, 26, -5, -2, -5, -3, -3, -21, -16, 21, -19, 2, 15, 0, 11, 17, 
12, 7, 42, 13, -7, 36, 0, 4, 42, -21, -47, 0, -8, -1, -7, 0, 
14, -1, -19, -83, 9, -7, -27, 4, 5, -14, 5, -8, -68, 8, -19, -44, 
-11, -13, -52, -8, -27, -53, 17, -41, };




#define layer_5_bias_size ((unsigned int)6) //array size
#define layer_5_bias_range ((nn_t)654) //multiply neuron result with range/1024

const nn_weight_t layer_5_bias[]={
0, 0, 12, 101, -12, -127, };


#endif
