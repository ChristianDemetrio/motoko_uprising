#ifndef _LAYER_layer_7_H_
#define _LAYER_layer_7_H_


#include <NetworkConfig.h>


#define layer_7_type "output"

const sLayerGeometry layer_7_input_geometry = {4, 4, 18};
const sLayerGeometry layer_7_output_geometry = {1, 1, 7};
const sLayerGeometry layer_7_kernel_geometry = {4, 4, 18};

#define layer_7_weights_size ((unsigned int)2016) //array size
#define layer_7_weights_range ((nn_t)252) //multiply neuron result with range/1024

const nn_weight_t layer_7_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, -2, -2, -1, 0, 1, 0, 3, -3, 1, 2, 72, 10, -2, -5, 
28, -5, -2, -4, 24, -4, 0, 0, 6, -6, 10, 8, 127, -4, -4, -15, 
-11, 14, 13, -5, 6, 27, 0, -12, 13, 18, 11, -4, -14, 29, 34, 13, 
14, 0, -13, 7, 12, -19, -9, 8, -2, 6, 0, -11, 6, -13, 36, -3, 
7, -13, 0, 5, -3, -3, -1, 2, 13, 3, 2, 1, 8, 13, 14, 0, 
-9, -13, -4, -13, 6, -6, -1, -2, 1, -3, -1, 0, 8, 0, -1, 22, 
-13, 6, -8, 4, 8, -3, -3, -2, -12, 8, 4, -3, -8, 1, 0, 45, 
10, 16, 13, -13, 15, 1, 0, -1, -4, 7, 1, 0, 15, 31, 2, 1, 
0, -3, 6, -15, 1, -3, 9, -1, 8, 0, -2, 7, 0, 0, 1, 5, 
9, 15, 12, -12, -5, -6, 12, 9, -1, 2, 6, 0, -3, -1, -5, -8, 
9, 10, -4, 9, 9, -3, -2, 4, 3, 0, 0, -3, -2, -6, -4, 4, 
-5, 9, -3, -10, 1, 1, 1, -1, -10, 0, 5, 6, -1, -2, -2, -6, 
-15, -8, 15, -9, 0, 2, 1, -15, 16, 1, 1, -12, 11, 1, 1, -54, 
4, -4, -4, -16, 10, 0, 0, 0, 4, 1, 0, 0, -14, -1, 2, 1, 
6, 30, -5, 14, 5, 20, 6, -8, 22, 28, -17, -3, 25, 17, 7, 0, 
23, -1, 2, 4, 6, -14, -12, -5, 46, -1, -8, -22, 29, -10, 0, -9, 
-24, 1, 0, -3, 51, -10, -9, -5, 85, 49, -5, 0, -76, 23, -4, -7, 
-1, 1, -4, 0, 1, 3, -7, -5, -4, 7, -12, -3, -14, 16, -9, -1, 
-1, 3, 2, 1, 1, 2, -1, 0, 7, 3, -3, -5, -21, 0, -2, -1, 
-14, 8, 4, 0, -10, 0, 1, -3, 19, 0, -10, -12, -17, 14, 5, -3, 
-3, 5, -6, -7, -7, 28, 25, 4, 14, 3, 45, 19, -8, 1, 27, 0, 
6, -9, -10, 0, -15, 17, 10, -15, -14, -4, 27, -3, 5, -33, 7, 9, 
10, 4, 6, 5, 11, 9, 7, 6, -13, 1, 6, -4, 1, 4, -6, -2, 
13, -9, -7, 10, 4, 20, 3, 2, -10, 0, 1, -1, 7, -1, -2, -9, 
2, 11, 15, 14, 0, 5, 7, -2, 16, 2, -2, -6, 2, -32, 0, -35, 
-12, -16, -15, -3, 11, -1, 1, 0, -8, -4, -3, 0, -8, -20, -15, 2, 
-6, -7, 0, 8, -10, 0, -12, 1, 4, 4, 2, 18, -1, -2, -7, 10, 
-3, -5, -9, 4, 8, 16, -10, -3, 9, -13, 7, 9, -1, 0, -8, 22, 
-2, -6, -13, 15, -12, 0, 8, 1, 14, 2, 1, 3, 6, 0, 1, -2, 
9, 2, -12, -9, 13, 0, 3, 2, 4, 2, 0, -1, -1, 2, 3, 5, 
-5, 4, -11, -8, 3, -11, 2, 0, -11, -8, 1, -15, 5, -10, 0, 42, 
-15, 3, 9, -5, -8, -1, 0, -1, 2, -1, -1, 2, -7, 0, 1, 2, 
12, 18, 17, 0, 10, 23, -1, -8, -15, 12, 23, -1, -17, 23, 23, 0, 
-5, -3, -7, -12, -1, 4, -7, -14, -16, 9, -1, -12, -42, 2, 2, -5, 
52, 11, 19, 7, -10, 22, 20, 0, -6, 2, 36, -2, 7, -27, 44, 13, 
6, 4, 4, -2, -3, -1, 4, -3, 0, -10, 7, -1, 13, -20, 11, 1, 
1, -2, -1, -4, -1, 0, 1, -3, -5, 0, 5, -1, -4, 0, 3, -1, 
4, 7, -5, -8, -5, 15, -5, -7, -20, 22, 2, -5, -24, 17, -10, -7, 
-9, 9, 7, -7, -4, -8, 0, 14, -4, -7, 7, 20, -8, 2, 2, 6, 
11, 15, 10, 5, 11, -6, -35, 20, -8, 4, -2, 14, 8, 21, -10, 32, 
2, -13, 1, -2, -8, 0, -3, -9, 3, 0, -3, 0, 12, 1, -1, 0, 
13, 8, -7, 6, -4, -2, -7, 1, -13, -6, -4, 1, -5, -7, 2, 8, 
13, -11, -8, 12, 4, -3, 0, -3, -9, 0, 0, -4, 0, 39, -8, -1, 
-9, -10, -5, -1, 0, 0, 1, 0, -2, -1, 4, -1, -5, -3, 25, -1, 
15, 1, -8, -10, -15, 8, 5, 16, -13, 6, 0, 0, 10, 6, 10, 5, 
-6, 8, -6, 0, 0, 4, -4, 5, -1, -1, -8, -14, 8, -10, -21, 12, 
11, 7, -15, 11, -11, 0, 2, 5, -11, 4, 0, 2, 2, 8, 1, 2, 
-14, 5, 14, 10, -8, 4, -1, 2, 10, 4, -2, 6, -1, 2, 3, 1, 
-2, 6, 11, -5, 10, 19, 2, 2, 6, 12, -2, 0, 10, 27, 0, 1, 
11, -13, 8, -2, 3, 1, 0, 0, -14, 0, 1, 0, 14, 3, 1, 0, 
-3, 4, 32, -11, -2, 20, 27, -10, -1, 14, 26, 0, 3, 18, 29, 7, 
-2, 8, 0, -10, -2, 4, -1, -8, 0, 1, -5, -4, -3, 0, -3, 0, 
0, -1, 35, 13, -1, -4, 29, 5, -8, -5, 26, 8, 0, -7, 14, -1, 
-5, -1, 2, 6, -5, -1, -1, 0, -3, 0, -2, 2, -3, 0, -3, -5, 
-2, 0, 1, -1, -1, -2, 0, -1, 0, -1, -1, 0, -1, 0, 1, -1, 
-5, -7, 2, -2, -5, -9, 5, -9, -2, -6, 9, -8, -1, -8, 11, -10, 
4, 6, -3, 1, 2, 2, -10, 32, 16, 2, -5, 8, 1, -1, 26, 23, 
7, 7, 4, -5, 10, -5, -9, 13, 14, -19, 15, 34, 3, 12, -3, 35, 
3, 11, 4, -10, 12, 0, 0, 17, -13, 0, 0, 0, 13, 1, 0, -1, 
6, -14, 0, 15, -2, -6, 8, -3, -16, 16, 15, -1, 5, 40, -11, -3, 
9, 4, -2, -8, 8, 0, 1, -4, -10, -2, 0, -4, 14, 3, -6, -2, 
14, -11, -2, -11, 7, 0, -2, 2, 7, 1, 0, -4, -13, 1, -11, -16, 
14, 10, -1, -14, 6, 11, 1, -5, -11, 5, -2, 8, -2, 2, -8, -11, 
-2, 13, -13, 12, -5, 9, 2, 11, 7, 25, 20, -7, -3, -5, 18, -8, 
0, 14, -2, 4, 12, 2, 0, 0, -9, -4, 5, 4, 2, 0, 2, -3, 
-4, 5, -10, 8, -15, 5, 1, -2, 12, -2, -3, 0, -16, -1, -3, -1, 
9, 12, 10, 0, 7, -4, 0, 5, 3, 3, -4, 4, 5, -4, -27, 2, 
-10, -6, 6, 2, 12, 0, 0, 0, 3, 2, -1, 0, 0, 0, -2, 0, 
10, -10, 5, 21, -1, -6, 19, 26, 2, 5, 25, 13, 21, 22, 20, 0, 
-11, -19, -2, 7, -11, -17, 5, -8, -3, -8, 7, -33, 0, 0, 5, -34, 
-4, 0, -30, 4, -13, -5, -32, 9, -10, 0, -19, 11, 7, -1, -15, 24, 
-8, -2, 3, 5, -11, -5, 4, 10, -11, -2, 1, 18, 7, -2, 10, 5, 
-1, 1, -4, 4, -6, -1, -3, 3, -3, 0, -1, 3, 2, 0, 0, 0, 
-5, -6, -3, 9, -9, -8, -9, 10, -11, -4, 0, 8, -8, -3, 4, 3, 
14, 12, -11, 6, 14, 10, 18, 19, 13, 20, 29, 7, 4, 18, 2, 8, 
-11, 6, 3, 8, -5, 1, -6, -16, -13, -19, -16, -22, 9, -28, -9, -23, 
-7, -9, -9, 7, 8, -1, 0, -8, 5, 0, -2, 13, 11, -1, -1, 0, 
-3, -2, 4, 8, 13, -3, -2, -7, 14, -3, -10, -12, -3, -17, -10, 0, 
-3, 5, -14, -11, -15, 0, -1, 22, 5, -1, 0, -16, 10, -6, 1, -1, 
4, -1, 0, -9, 11, -4, 0, -3, -7, 2, 0, 8, 12, 2, 1, 44, 
-9, 13, -1, 13, 10, -7, 14, -7, 8, -4, 10, -5, 0, 9, 12, -2, 
0, 0, -12, -8, 5, 13, -11, -11, 16, -16, 9, 6, 13, 4, -17, 3, 
-7, -12, 0, -6, -11, 0, -2, 3, 5, 3, -3, 1, 14, -2, 1, 4, 
13, -2, -3, -14, 0, -1, 0, -1, -10, 5, 4, -2, -12, 4, 6, 2, 
-13, 4, 5, 3, 0, -3, 9, -3, 6, -5, 16, 0, -14, -8, 33, -5, 
9, 0, 2, -9, 4, 0, 0, -1, 6, 0, 0, -1, 4, 0, 0, -1, 
45, 19, 15, 23, 20, 2, 21, 28, -13, -9, 7, 31, 6, 14, -4, 46, 
13, 11, 4, 6, 5, 1, -1, 26, -23, -8, 20, 18, -16, 5, -14, -33, 
1, -8, -4, 12, 1, -2, -10, 11, -31, -17, -24, 10, -36, -12, -32, -47, 
10, 2, -1, -5, 8, 2, 3, -6, 0, 0, 10, -15, -31, 1, 7, 17, 
3, 2, 2, 1, 5, 1, 0, 0, -6, -3, -3, 3, -11, -3, -1, 1, 
6, 8, 3, -2, 11, 8, 2, 2, -6, -9, -10, 0, -20, -10, -3, -5, 
1, 7, -9, -5, 13, -2, 24, -6, -14, 9, -2, 7, -11, 7, 5, 1, 
-5, -9, 9, 8, 4, -3, 1, -8, -1, -5, 14, 7, -10, -42, -11, -19, 
-1, 6, 13, 11, 2, -1, 0, -6, -7, 0, -3, -6, -4, -2, -1, 5, 
14, -13, -15, 0, 8, -1, -3, 9, -16, -2, 1, 15, -8, -8, 23, 0, 
11, -6, 11, 11, -9, 1, -2, -8, -15, 0, 0, 36, 13, -4, 17, -13, 
13, -14, -5, -6, 10, 4, 0, 1, 4, -3, 1, -5, -15, -1, 1, -30, 
-3, -4, 7, -5, -1, 6, -1, -6, -3, 9, 16, -14, -9, 2, 6, -5, 
-6, -8, 13, 14, -9, 3, -3, 22, 11, -17, 9, 16, 11, 4, -7, -5, 
8, 6, 0, -5, -16, 4, 0, -5, -1, 0, 0, 0, 13, 2, 0, 0, 
0, 10, -12, -3, -10, -7, 2, 5, -6, -1, 2, -4, -10, 0, 1, 1, 
-6, -11, 9, -15, -10, -1, -12, -1, -1, -1, -14, 0, -1, -4, -8, 0, 
13, 13, -12, -8, 10, 0, 0, -1, 15, 0, 1, 0, 13, -2, 0, -1, 
20, 1, -1, 17, 14, 16, 21, 22, 28, 30, 4, 22, -10, -1, 3, 44, 
-2, 2, 2, 5, 7, 9, 4, 2, 0, 10, -8, 42, -23, 1, -2, 99, 
-10, -6, -6, -31, -5, -6, 0, -17, -18, -16, -3, -16, -31, -23, -11, 24, 
-2, -9, -1, -2, 5, -3, -1, 3, 5, 0, 0, 0, 42, 10, -14, -17, 
0, 0, 1, 0, 3, 1, 2, 1, 6, 2, 2, 0, -9, -3, 0, 7, 
-2, -4, -2, 6, 1, -2, 6, 5, 10, 5, 2, 12, -24, -8, -4, 35, 
};




#define layer_7_bias_size ((unsigned int)7) //array size
#define layer_7_bias_range ((nn_t)241) //multiply neuron result with range/1024

const nn_weight_t layer_7_bias[]={
17, 67, 95, 46, 127, 103, 55, };


#endif
