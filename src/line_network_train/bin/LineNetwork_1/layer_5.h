#ifndef _LAYER_layer_5_H_
#define _LAYER_layer_5_H_


#include <NetworkConfig.h>


#define layer_5_type "output"

const sLayerGeometry layer_5_input_geometry = {4, 4, 8};
const sLayerGeometry layer_5_output_geometry = {1, 1, 8};
const sLayerGeometry layer_5_kernel_geometry = {4, 4, 8};

#define layer_5_weights_size ((unsigned int)1024) //array size
#define layer_5_weights_range ((nn_t)731) //multiply neuron result with range/1024

const nn_weight_t layer_5_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 5, -1, 1, 7, 5, -1, -1, -6, 0, 1, 1, 5, -2, -6, 0, 
-6, -1, -2, 1, 6, 1, -72, -46, 5, 37, -60, -73, 2, 41, -24, -24, 
0, 0, -5, -3, -3, 12, 37, -64, -5, 1, 49, -26, -4, -23, 59, -23, 
-1, -5, -7, 7, -6, 0, 0, 0, -7, 0, 0, 0, -3, 0, 0, 0, 
6, -7, 6, 2, -7, -16, 0, 1, -6, -19, 0, -70, -6, -15, 0, 17, 
0, -3, -5, 2, -1, -5, -7, -9, -5, -14, -5, 1, 4, -7, 2, -2, 
2, -7, -2, -5, -2, 34, -6, -1, 1, 36, -2, -3, -3, 0, -11, 4, 
-5, 1, 4, -3, 3, 51, 33, -10, -6, 37, 41, -5, 1, -32, 85, 15, 
-4, 0, -4, -6, -6, -1, 3, 0, 6, 0, -3, -2, 6, 5, 5, 2, 
4, -6, 0, -5, 5, 37, -47, -85, -5, 24, -32, -83, 4, 28, -23, -58, 
0, 0, -4, -7, -2, -74, 37, -5, 6, -104, 31, -1, -7, -97, 20, 13, 
-2, 7, 6, -7, 5, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, 0, 
6, 7, -1, -1, -6, 67, -1, -10, -4, 63, -3, 91, -7, -27, 5, 9, 
1, -3, -6, 0, -6, 5, -9, -11, 3, -1, -5, -12, 0, 63, -2, 2, 
-3, 4, -3, 3, 0, -5, -14, 0, 3, -24, -7, 0, 0, 4, 1, -1, 
-5, 4, -2, -6, 2, -7, 5, -5, -1, -2, 7, 5, -3, 11, -15, -4, 
-4, 1, 1, -5, 0, -2, -2, -4, -6, 1, 0, 1, 2, 0, -5, 4, 
0, 4, -5, 5, -1, 13, 29, -52, 5, 16, 19, -50, 5, 16, 15, -48, 
7, -6, 4, 5, -1, -70, -28, 55, 1, -50, -16, 45, 4, -27, -17, 50, 
-6, 7, 0, 3, -4, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 
-1, 1, 0, -5, 1, -12, -3, 0, -1, -5, -25, 11, 5, 84, 9, 2, 
-2, 2, 0, -6, -4, 2, -4, -22, -4, 3, -9, 0, -3, -1, -6, 3, 
-3, -3, -4, 7, 6, 11, 39, -3, -6, 28, 21, -5, -1, -19, -12, -21, 
7, 2, 5, 5, -6, 0, -15, 43, 1, -2, -16, 41, 7, 10, -7, 33, 
-5, 3, 5, -6, 0, 3, -4, 0, 3, -3, 4, -5, -4, 2, 3, 0, 
1, 2, -5, -6, 5, -25, 36, -32, 0, -23, 28, -23, 0, -22, 44, -29, 
3, 6, 6, -4, -7, -64, -78, 29, 0, -92, -71, 34, 4, -85, -61, 50, 
2, 1, -2, 7, -6, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 
-1, -5, -4, 4, 1, -3, 43, 16, -7, -1, 70, -18, 4, -29, -31, -1, 
4, -5, 5, 4, -4, -9, -23, 45, 2, -15, 0, -4, 7, -4, 53, -20, 
0, -5, -6, -1, -6, -1, 24, 0, 5, -2, 66, -9, -7, 32, 58, -59, 
6, 2, -6, 0, 1, -1, -5, -11, -6, 0, 0, -22, 6, 10, -3, -23, 
5, -7, -7, 1, 5, -3, 5, 5, -3, 7, 0, -3, 0, 5, -2, -6, 
-3, 6, -2, 5, 5, -13, 50, -22, -5, -5, 51, -3, 7, -27, 34, 33, 
0, -1, -7, 5, 2, -31, -17, 61, -7, -63, -51, 53, 0, -74, -73, 23, 
0, -2, 5, 1, -4, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 
2, 1, 3, -6, 6, -7, -10, -4, -6, -10, -18, -13, 0, 3, 80, -5, 
-3, -3, -1, 3, -5, 11, 11, -24, 2, -23, -66, 35, 3, -9, -17, -62, 
2, 6, 0, -2, 7, -10, -21, 32, 6, -10, -43, 13, 2, 24, 37, 113, 
-5, 0, -3, 0, 2, -7, 0, -4, 4, -8, -11, -11, 0, 10, -2, -6, 
-1, 5, 2, 2, -4, 1, 0, 4, 1, 4, -1, 0, -2, 0, 2, -2, 
4, 5, 1, -4, 6, 21, -8, 1, 4, 24, 21, 4, 0, 7, 23, 26, 
2, -6, 0, -7, 0, 1, 11, -1, 0, -14, -14, 24, -5, -38, -57, 28, 
-1, 5, 5, -3, 6, 0, 0, 0, -5, 0, 0, 0, 5, 0, 0, 0, 
-3, -4, -5, 4, -6, -3, -12, -2, -5, -2, -15, -2, -6, -5, -64, -4, 
2, 0, 0, 4, 5, -2, 34, -3, 0, -20, 122, 7, -1, -7, -30, 127, 
3, -1, -7, -4, -4, -6, -3, 0, 1, -6, -10, 23, -2, -14, -42, -36, 
3, -3, 7, 4, 0, -1, -3, -5, 2, -6, -1, -4, 1, -4, -3, -3, 
};




#define layer_5_bias_size ((unsigned int)8) //array size
#define layer_5_bias_range ((nn_t)275) //multiply neuron result with range/1024

const nn_weight_t layer_5_bias[]={
103, 127, 51, 20, 9, 23, 48, 32, };


#endif
