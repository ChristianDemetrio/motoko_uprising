#ifndef _LAYER_layer_7_H_
#define _LAYER_layer_7_H_


#include <NetworkConfig.h>


#define layer_7_type "output"

const sLayerGeometry layer_7_input_geometry = {4, 4, 12};
const sLayerGeometry layer_7_output_geometry = {1, 1, 5};
const sLayerGeometry layer_7_kernel_geometry = {4, 4, 12};

#define layer_7_weights_size ((unsigned int)960) //array size
#define layer_7_weights_range ((nn_t)424) //multiply neuron result with range/1024

const nn_weight_t layer_7_weights[]={
-4, 0, 0, 0, 6, -44, -7, 4, 6, -7, -5, -1, 4, 28, 4, -17, 
-6, 0, 0, 0, 0, -3, -2, -3, -6, 1, 0, -12, 2, -14, 5, -21, 
0, -1, -2, 4, 2, -12, 3, 81, 0, -16, 0, 46, 0, -15, -13, 60, 
4, 5, -4, 6, 0, -22, -6, 24, 3, 12, -12, 8, 2, 7, -12, -20, 
5, 0, 0, 0, 0, 12, 8, -16, 0, 17, 1, -16, -4, 38, 35, 15, 
4, 0, 4, 0, 0, 52, -14, -35, 0, 37, -16, -4, 0, 13, 5, -3, 
0, 0, 0, 0, -8, 13, 1, -23, 3, 8, 2, -11, 5, -3, 2, -11, 
0, 0, 0, 3, 0, -3, 0, -7, 0, -7, -5, 6, -8, 4, -5, -4, 
-44, -16, -8, -2, -18, -6, -7, -7, 2, -4, -8, -6, 8, -4, -5, -4, 
-2, -27, -17, 44, -10, -15, -5, 27, -12, -5, -7, 12, -1, 3, -7, -98, 
13, 7, -6, -5, 11, 6, -5, -4, 9, 8, -4, -5, 7, 6, -2, -7, 
-43, -1, 0, 5, -30, 0, -1, 6, -4, 0, 0, 0, 11, 0, 0, -3, 
8, 1, -1, 4, 0, 32, -1, -9, 0, 13, -5, -4, 0, -10, 0, 18, 
0, 0, -6, -4, -5, 5, -5, 8, -2, 0, 0, -2, 0, 43, 4, -2, 
-7, 0, -6, -6, 0, -42, -20, -26, 6, -27, -12, 0, 0, -11, -6, -3, 
0, 0, 0, 8, 0, 18, -1, -25, -5, 0, 1, -16, 0, -7, -7, 52, 
12, 6, -1, 3, -7, 13, 1, 9, -9, 0, 5, -1, -4, 4, -1, -44, 
9, 2, 7, -4, -2, -35, 32, -19, 9, -20, 16, 4, -2, 35, 6, -9, 
10, -7, 7, -8, 9, 12, 1, -4, -12, -9, -3, 5, 0, 22, -4, -7, 
0, -13, -1, 11, -9, 3, 5, -2, 10, -13, -7, -1, 12, -8, 7, 2, 
72, 21, 1, -12, 39, 18, 7, -11, 14, 19, 4, -3, -9, 4, 3, -7, 
80, -50, -3, -9, 62, -20, 6, 7, 37, -14, -1, 28, -14, 7, -6, -32, 
0, 3, -3, -8, 6, 1, -3, -5, 3, -1, -2, -3, 0, 0, 0, -3, 
56, -14, 3, -6, 33, -8, 0, -2, 8, -2, -1, 4, -13, -2, -2, -1, 
4, -12, 0, 13, 7, 19, 33, -24, 9, 11, 11, -7, 5, -7, 0, 7, 
11, -1, 3, 2, -4, -11, -23, -3, -13, -30, -9, 1, -2, -36, 17, 2, 
4, -10, -1, 0, -2, 108, 8, -12, -12, 80, 9, 2, 3, 30, 3, 4, 
5, 8, -13, 0, -13, 4, -18, 3, -11, 8, -2, 6, 9, -2, -3, -6, 
4, -7, -2, -9, -7, 0, 11, -12, 6, 3, 1, 1, -4, 6, -10, 0, 
-3, 9, 4, -10, 4, -11, -4, 44, -1, -9, -3, 0, -8, -32, -5, 0, 
-8, 8, -7, -9, 11, 19, -4, -1, 5, 9, -5, 0, -12, -7, 13, -9, 
6, 9, -2, -7, 12, 10, -11, -11, 7, -8, -5, -4, 13, -9, 0, 3, 
-18, 0, -19, -7, -13, -7, -7, 0, -4, 2, 0, 0, -2, 4, 5, 14, 
-63, 47, -37, -26, -54, 17, -30, -9, -10, 11, 1, 17, 14, -3, 27, 3, 
-7, 4, 2, -1, -6, 2, 3, -2, 0, 1, 2, 0, -2, 0, 3, 4, 
-7, 18, -27, -12, -9, 13, -12, -10, 3, 4, -1, -3, 4, -2, 7, 2, 
5, -8, 6, -2, 10, 3, -24, 46, 0, 0, -10, 21, 6, 11, -2, -9, 
-7, 0, -6, -10, 8, 29, 83, 15, -5, 17, 39, 0, 10, -1, -4, 6, 
5, -2, -6, 12, -4, -55, 49, 2, 7, -37, 25, 0, -5, 1, 0, 5, 
3, 4, -9, 11, -12, -26, 26, 36, 9, 2, 8, 8, -8, 2, -15, 5, 
-9, 8, 2, 0, -1, -28, -13, 10, 13, -16, -4, 18, 9, -7, -4, 25, 
8, 0, -9, 7, -8, 0, 0, 1, -5, -1, -4, 0, 9, 7, -1, 23, 
1, -6, -3, 4, -6, -31, 36, -13, 10, -4, 22, 8, 0, 2, 6, 1, 
3, -2, -6, -1, -7, -13, 13, 8, -11, -3, -11, -2, 0, -1, 3, 8, 
-3, 2, 22, -63, -12, -1, 16, -49, -2, 6, 1, -23, 2, 2, -9, -16, 
-9, 32, -13, 67, -8, 34, 7, 28, -16, 27, -6, -7, -8, 21, -14, -2, 
-2, -6, 11, 9, -1, -3, 2, 4, -3, -1, 4, 0, -4, 1, 2, 0, 
-4, 2, 13, -7, -6, 0, 3, -2, -1, -2, 6, 9, 3, 11, -8, 11, 
-12, 0, -10, 13, 5, -13, 4, -28, 5, -4, 3, 0, 11, -18, -6, 8, 
-8, 7, -5, 2, 0, 6, -72, -18, 5, 1, -35, 12, -1, -1, -16, 29, 
3, 2, -6, 5, 3, 0, -28, -34, -2, -3, -5, -35, -11, 7, 10, -84, 
9, -13, -4, 0, 10, 14, -8, -21, -3, -15, 8, -19, 7, -10, 51, -13, 
10, 12, -2, -4, 10, 4, -7, -5, -5, 1, -7, 8, 11, -3, 12, 7, 
2, 11, 5, -3, 11, -11, 10, 10, 3, -7, 3, -5, -3, -20, 0, 3, 
-10, 13, 11, -2, 7, -9, -34, 40, 1, 2, -13, 2, 9, 1, -3, 19, 
3, 10, -2, -11, 0, 13, 12, 5, 2, -2, 12, 2, 5, -2, -5, -4, 
-4, -9, 7, 83, -2, -11, 14, 65, -5, -11, 13, 35, -1, -7, 5, 21, 
5, -1, 52, -53, -1, -21, 39, -42, 5, -8, 22, -31, -7, -12, 6, 127, 
-11, -9, -1, 8, -10, -6, 0, 3, -9, -3, 0, 6, -5, -1, 3, 5, 
4, -5, 12, 22, 5, -3, 12, 8, -1, -1, 2, -11, 2, 0, 3, 0, 
};




#define layer_7_bias_size ((unsigned int)5) //array size
#define layer_7_bias_range ((nn_t)293) //multiply neuron result with range/1024

const nn_weight_t layer_7_bias[]={
127, 53, 82, 28, 56, };


#endif
