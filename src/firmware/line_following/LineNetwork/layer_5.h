#ifndef _LAYER_layer_5_H_
#define _LAYER_layer_5_H_


#include <NetworkConfig.h>


#define layer_5_type "dense convolution"

const sLayerGeometry layer_5_input_geometry = {4, 4, 8};
const sLayerGeometry layer_5_output_geometry = {4, 4, 12};
const sLayerGeometry layer_5_kernel_geometry = {3, 3, 4};

#define layer_5_weights_size ((unsigned int)288) //array size
#define layer_5_weights_range ((nn_t)439) //multiply neuron result with range/1024

const nn_weight_t layer_5_weights[]={
-1, 25, 0, -72, -3, -15, -75, -3, -3, 48, -29, 51, 30, -28, 41, -51, 
-27, 13, 3, -13, 11, 43, -67, 32, 1, -38, 11, 3, 0, 6, 4, 0, 
117, -23, 53, 24, 81, -81, -3, 53, -36, -42, 10, -53, -14, 80, 7, -2, 
57, 25, -11, 33, 1, 0, 0, 12, -30, 5, 0, 6, -2, -7, 14, 84, 
-81, -45, 35, -38, -24, -5, -12, -29, 8, 19, 17, -25, -47, 15, -11, -29, 
53, 29, -15, 0, 9, -6, 3, 12, -22, -2, -45, 25, -68, -107, 40, -56, 
-73, 47, -31, 13, 0, 18, 17, 11, 51, 99, 28, 12, 49, 54, -107, 0, 
22, -94, 24, 10, -50, 35, -38, 51, 8, 35, -27, 30, 39, -58, -1, 7, 
-10, -1, -15, 6, 39, -25, 15, 32, 0, -61, -4, 16, -23, 8, 11, -6, 
18, -118, 45, -10, -106, 47, -33, -36, 31, -21, 3, -22, 1, -24, 0, 54, 
-44, 41, -35, 18, -2, 32, -5, -34, 43, 5, 19, 3, 0, -3, -11, 0, 
-127, -83, -13, -59, -69, 50, -52, -8, 0, -5, -28, 11, 9, -15, 56, -112, 
28, 20, -11, -28, -30, 35, -59, 28, 60, -18, 0, 53, -37, 6, 0, -53, 
66, -121, -32, 15, -39, 1, 36, 10, 15, -43, -10, -8, -34, 9, 3, 18, 
23, -21, -7, 19, 7, 6, -1, 0, 5, 0, -56, -21, 25, -104, 63, -41, 
-47, 22, -9, 4, -6, 12, 3, -16, 84, -29, 12, 98, -35, 26, -11, -16, 
19, 25, -29, -9, -6, 17, -16, 18, 11, -37, 58, 32, -30, 43, -16, -10, 
24, -22, 6, 48, -18, 0, 43, 15, 5, -35, -5, -19, 28, 12, -3, 64, 
};




#define layer_5_bias_size ((unsigned int)4) //array size
#define layer_5_bias_range ((nn_t)102) //multiply neuron result with range/1024

const nn_weight_t layer_5_bias[]={
44, 0, 127, 0, };


#endif
