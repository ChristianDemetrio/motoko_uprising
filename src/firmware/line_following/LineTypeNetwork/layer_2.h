#ifndef _LAYER_layer_2_H_
#define _LAYER_layer_2_H_


#include <NetworkConfig.h>


#define layer_2_type "convolution"

const sLayerGeometry layer_2_input_geometry = {8, 8, 9};
const sLayerGeometry layer_2_output_geometry = {8, 8, 8};
const sLayerGeometry layer_2_kernel_geometry = {3, 3, 8};

#define layer_2_weights_size ((unsigned int)648) //array size
#define layer_2_weights_range ((nn_t)524) //multiply neuron result with range/1024

const nn_weight_t layer_2_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
57, -10, 9, 12, 36, -21, 13, -36, -14, -11, -20, 2, 9, -39, -6, -27, 
-33, 26, 1, -36, 20, -10, -46, 18, -8, -7, -5, 4, -5, -19, 12, 27, 
48, -5, 50, 4, 4, 61, 0, -2, 67, 2, -76, -4, -11, -120, 32, 26, 
-124, 37, 11, 46, 33, -11, 39, 51, 19, 38, 66, 3, 15, -42, 14, 9, 
-48, 14, 31, -42, -2, -11, -10, -16, -32, -17, -18, -28, -6, -11, 45, 19, 
-14, 55, 30, -27, 50, -6, -18, -5, 20, -12, 27, 1, -27, 35, -7, 10, 
-18, -25, 7, 36, -7, -21, 28, -11, -2, 28, 11, -21, 8, -12, -44, -20, 
-34, -43, 30, 21, -57, -14, 32, -43, -7, 44, -48, 42, -50, 10, 45, -93, 
51, 70, -94, 6, 38, 36, -38, 39, 34, -18, 20, 14, -1, 21, -1, -3, 
45, 28, -44, 39, -11, -8, -15, 5, -4, -10, -19, 0, 11, 2, 40, -6, 
73, 45, 18, 38, 24, 24, -25, 27, -8, -5, -1, 30, 24, -2, 28, -20, 
-15, 12, -24, -22, 5, 12, 7, 19, 3, -11, -15, 7, -19, -4, 9, 14, 
4, -21, -57, 31, -21, -53, 52, -25, -79, 41, -28, -13, 54, 48, -21, 84, 
6, -63, 117, -18, 23, -32, -18, 44, -11, 33, 39, 18, 21, -15, 11, 24, 
-21, 9, 24, 18, 30, 9, -48, -19, 1, -70, -22, -8, -67, -34, -1, -32, 
54, -32, -34, 63, -40, -39, 34, -22, -35, 3, 11, 0, 33, -12, -11, 10, 
-16, 29, -5, -31, 1, 10, -46, -19, 26, -30, -15, 55, 15, -34, 32, 1, 
-53, 1, -2, -18, -1, 37, -27, -13, 56, 14, -41, 53, -22, -29, -19, 52, 
-127, 41, 82, -121, 67, -35, 38, 24, -68, 50, 6, -12, 32, -8, 31, 12, 
-35, 19, 48, -2, 2, 23, -22, 2, -19, -21, -3, -17, -12, -13, -10, 17, 
-4, 59, 24, 20, 41, 26, -19, 19, -2, -7, -12, 32, -22, 14, 3, -10, 
18, -1, -14, -34, -18, -1, -3, -3, 10, 10, 19, 25, 39, -5, 21, 13, 
11, -22, 10, -22, -40, -58, -30, -10, -34, 9, 21, -70, 23, -87, -72, 17, 
-51, -121, 27, 36, -75, 21, -15, 28, 8, -40, 14, 21, -9, -8, 17, 11, 
-2, 19, 32, 38, 57, 9, 3, 50, };




#define layer_2_bias_size ((unsigned int)8) //array size
#define layer_2_bias_range ((nn_t)182) //multiply neuron result with range/1024

const nn_weight_t layer_2_bias[]={
28, 21, -2, -61, -117, -67, -127, -112, };


#endif
